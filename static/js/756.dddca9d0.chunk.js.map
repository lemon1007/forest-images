{"version":3,"file":"static/js/756.dddca9d0.chunk.js","mappings":"2NAOMA,EAAUC,EAAAA,GAAAA,IAAU,gFAMpBC,EAAQD,EAAAA,GAAAA,GAAS,uEAKjBE,GAAcF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAc,gIA0HlC,UAnGkB,WAEhB,IAAMI,GAAWC,EAAAA,EAAAA,MACVC,GAAaC,EAAAA,EAAAA,KAAbD,UA6BP,OACE,UAACP,EAAO,YACN,SAACE,EAAK,UAAC,8BACP,UAAC,IAAI,CACHO,KAAK,QACLC,SA/BW,SAAAC,GACfJ,EAAUK,YAAYD,EAAOE,UAC7BN,EAAUO,YAAYH,EAAOI,UAC7BR,EAAUS,WACPC,MAAK,WAAOZ,EAAS,IAAK,IAC1Ba,OAAM,WAAOC,QAAQC,IAAI,2BAAQ,GACtC,EA0BMC,eAvBiB,SAAAC,GACrBH,QAAQC,IAAI,UAAWE,EACzB,EAqBqC,WAE/B,SAAC,SAAS,CACRC,MAAM,iCACNd,KAAK,WACLe,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CAACC,UA7Bc,SAACC,EAAMC,GAC9B,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,gEACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,EAAUF,QAAQC,OAAO,gDACzDD,QAAQG,SACjB,IA0BU,UAEF,SAAC,IAAK,OAGR,SAAC,SAAS,CACRX,MAAM,2CACNd,KAAK,WACLe,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAEX,CACES,IAAK,EACLT,QAAS,mCAEX,CACEU,IAAK,GACLV,QAAS,qCAEX,UAEF,SAAC,aAAc,OAGjB,SAAC,SAAS,CACRH,MAAM,2BACNd,KAAK,kBACLe,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wCAxDG,SAAH,OAAKW,EAAa,EAAbA,cAAa,MAAO,CAC5CV,UAAS,SAACC,EAAMC,GACd,OAAIQ,EAAc,cAAgBR,EAAcE,QAAQG,UACjDH,QAAQC,OAAO,6CACxB,EACD,GAsDS,UAEF,SAAC,aAAc,OAGjB,SAAC,SAAS,WACR,SAAC7B,EAAW,CAACmC,KAAK,UAAUC,SAAS,SAAQ,SAAC,wBAOxD,C","sources":["pages/Register.js"],"sourcesContent":["import React from 'react';\nimport {useStores} from '../stores';\nimport {Form, Input, Button} from 'antd';\nimport styled from 'styled-components';\nimport {useNavigate} from 'react-router-dom';\n\n\nconst Wrapper = styled.div`\n  max-width: 500px;\n  margin: auto;\n  padding: 20px;\n`;\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-bottom: 30px;\n`;\n\nconst StyleButton = styled(Button)`\n  background-color: #42b983;\n  margin-left: 50%;\n  transform: translateX(-50%);\n  margin-top: 15px;\n`;\n\n// const layout = {\n//   labelCol: {\n//     span: 4,\n//   },\n//   wrapperCol: {\n//     span: 18,\n//   },\n// };\n// const tailLayout = {\n//   wrapperCol: {\n//     offset: 11,\n//     span: 18,\n//   },\n// };\n\n\nconst Component = () => {\n\n  const navigate = useNavigate();\n  const {AuthStore} = useStores();\n\n  // 注册成功\n  const onFinish = values => {\n    AuthStore.setUsername(values.username);\n    AuthStore.setPassword(values.password);\n    AuthStore.register()\n      .then(() => {navigate('/');})\n      .catch(() => {console.log('注册失败');});\n  };\n\n  // 注册失败\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const validateUsername = (rule, value) => {\n    if (/\\W/.test(value)) return Promise.reject('只能是字母数字下划线');\n    if (value.length < 1 || value.length > 4) return Promise.reject('长度为1～4个字符');\n    return Promise.resolve();\n  };\n\n  const validateConfirm = ({getFieldValue}) => ({\n    validator(rule, value) {\n      if (getFieldValue('password') === value) return Promise.resolve();\n      return Promise.reject('两次密码不一致');\n    }\n  });\n\n  return (\n    <Wrapper>\n      <Title>用户注册</Title>\n      <Form\n        name=\"basic\"\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n      >\n        <Form.Item\n          label=\"用&nbsp;&nbsp;户&nbsp;名\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: '输入用户名',\n            },\n            {validator: validateUsername}\n          ]}\n        >\n          <Input/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"密&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;码\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: '输入密码',\n            },\n            {\n              min: 4,\n              message: '最少4个字符'\n            },\n            {\n              max: 10,\n              message: '最多10个字符'\n            }\n          ]}\n        >\n          <Input.Password/>\n        </Form.Item>\n\n        <Form.Item\n          label=\"确认密码\"\n          name=\"confirmPassword\"\n          rules={[\n            {\n              required: true,\n              message: '再次确认密码',\n            },\n            validateConfirm\n          ]}\n        >\n          <Input.Password/>\n        </Form.Item>\n\n        <Form.Item>\n          <StyleButton type=\"primary\" htmlType=\"submit\">\n            提交\n          </StyleButton>\n        </Form.Item>\n      </Form>\n    </Wrapper>\n  );\n};\n\nexport default Component;"],"names":["Wrapper","styled","Title","StyleButton","Button","navigate","useNavigate","AuthStore","useStores","name","onFinish","values","setUsername","username","setPassword","password","register","then","catch","console","log","onFinishFailed","errorInfo","label","rules","required","message","validator","rule","value","test","Promise","reject","length","resolve","min","max","getFieldValue","type","htmlType"],"sourceRoot":""}